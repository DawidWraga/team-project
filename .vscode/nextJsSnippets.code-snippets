{
  // Place your team-project workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  // Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "console.log": {
    "prefix": "clg",
    "body": ["console.log($1)"]
  },
  "Next.js API handler": {
    "prefix": "api",
    "body": [
      "import { apiHandler } from 'lib-server/nc';",
      "",
      "const handler = apiHandler();",
      "",
      "handler.get(async (req, res) => {",
      "",
      "});",
      "export default handler;"
    ]
  },
  "Next.js Function Component (js)": {
    "scope": "javascript",
    "prefix": "nfc",
    "body": [
      "export function ${TM_FILENAME_BASE/.*/${0:/capitalize}/} (props) {",
      "\tconst {} = props;",
      "\t",
      "\treturn (<$1>$2</$1>);",
      "}"
    ]
  },
  "Next.js Page Component (js)": {
    "scope": "javascript",

    "prefix": "nfcp",
    "body": [
      "export default function ${TM_FILENAME_BASE/.*/${0:/capitalize}/}Page (props) {",
      "\tconst {} = props;",
      "\t",
      "\treturn (<$1>$2</$1>);",
      "}"
    ]
  },
  "Next.js Page Component (NESTED) (js)": {
    "scope": "javascript",

    "prefix": "nfcpn",
    "body": [
      "export default function ${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/${1:/capitalize}/}Page (props) {",
      "\tconst {} = props;",
      "\t",
      "\treturn (<$1>$2</$1>);",
      "}"
    ]
  },
  "Next.js Functional Component Wrapper (js)": {
    "scope": "javascript",
    "prefix": "nfcw",
    "body": [
      "export default function ${TM_FILENAME_BASE/.*/${0:/capitalize}/} (props) {",
      "\tconst {children} = props;",
      "\t",
      "\treturn (",
      "\t\t<$1>",
      "\t\t\t$2",
      "\t\t\t{children}",
      "\t\t</$1>",
      "\t);",
      "}"
    ]
  },
  "Next.js Function Component": {
    "scope": "typescriptreact",
    "prefix": "nfc",
    "body": [
      "interface IProps {}",
      "",
      "export function ${TM_FILENAME_BASE/.*/${0:/capitalize}/} (props:IProps) {",
      "\tconst {} = props;",
      "\t",
      "\treturn (<$1>$2</$1>);",
      "}"
    ]
  },
  "Next.js Page Component": {
    "scope": "typescriptreact",
    "prefix": "nfcp",
    "body": [
      "interface IProps {}",
      "",
      "export default function ${TM_FILENAME_BASE/.*/${0:/capitalize}/}Page (props:IProps) {",
      "\tconst {} = props;",
      "\t",
      "\treturn (<$1>$2</$1>);",
      "}"
    ]
  },
  "Next.js Page Component (NESTED)": {
    "scope": "typescriptreact",
    "prefix": "nfcpn",
    "body": [
      "interface IProps {}",
      "",
      "export default function ${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/${1:/capitalize}/}Page (props:IProps) {",
      "\tconst {} = props;",
      "\t",
      "\treturn (<$1>$2</$1>);",
      "}"
    ]
  },
  "Next.js Functional Component Wrapper": {
    "scope": "typescriptreact",
    "prefix": "nfcw",
    "body": [
      "interface IProps {",
      "\tchildren: React.ReactNode",
      "}",
      "",
      "export default function ${TM_FILENAME_BASE/.*/${0:/capitalize}/} (props:IProps) {",
      "\tconst {children} = props;",
      "\t",
      "\treturn (",
      "\t\t<$1>",
      "\t\t\t$2",
      "\t\t\t{children}",
      "\t\t</$1>",
      "\t);",
      "}"
    ]
  }
}
